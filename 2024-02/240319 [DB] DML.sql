-- Data Manipulation Language : DML
-- INSERT / UPDATE / DELETE

-- 실습 10-1(p.266)
-- 테이블 복사
-- * 주의) 제약 조건은 복사되지 않음
CREATE TABLE DEPT_TEMP AS SELECT * FROM DEPT;
-- 실습 10-2(p.266)
SELECT * FROM dept_temp;



-- INSERT문 : 테이블에 데이터를 추가
-- INSERT INTO 테이블명 (열이름1, 열이름2, 열이름3,...)
--              VALUES(데이터1, 데이터2, 데이터3, ...)
-- 실습 10-3(p.286)
INSERT INTO dept_temp (deptno, dname, loc)
    values(50, 'DATABASE', 'SEOUL');
SELECT * FROM dept_temp;

-- INSERT문 사용시 주의점
-- 1. 열의 개수가 맞지 않을 때 
INSERT INTO dept_temp (deptno, dname, loc)
    values(60, 'NETWORK');
    -- -> 값의 수가 충분하지 않다고 뜸

-- 2. 데이터가 많을 때
INSERT INTO dept_temp (deptno, dname, loc)
    values(60, 'NETWORK', 'BUSAN', 'WRONG');
    -- -> 값의 수가 너무 많다고 뜸

-- 3. 데이터 타입이 다를 때
INSERT INTO dept_temp (deptno, dname, loc)
    values('WRONG', 'NETWORK', 'BUSAN');
    -- -> 수치가 부적합하다고 뜸

-- 4. 데이터 길이가 맞지 않을 때
INSERT INTO dept_temp (deptno, dname, loc)
    values(100, 'NETWORK', 'BUSAN');
    -- -> 전체 자릿수(2자릿수)보다 큰 값(3자릿수)이 들어감

-- 실습 10-4(p.270)
-- 열 지정 없이 데이터 추가하기
-- SQL Developer 같은 테스트 가능한 응용 프로그램에서 실행하는 방식
-- 실제 서버에서 실행할 때 모든 열을 적는 것을 권장
INSERT INTO dept_temp
    values(60, 'NETWORK', 'BUSAN');
SELECT * FROM dept_temp;



-- 실습 10-5(p.270)
-- 테이블에 NULL 데이터 입력하기 : null 명시적 입력
INSERT INTO dept_temp (deptno, dname, loc)
    VALUES(70, 'WEB', NULL);
SELECT * FROM dept_temp;

-- 실습 10-6(p.271)
-- 테이블에 NULL 데이터 입력하기 : null 암시적 입력(1)
INSERT INTO dept_temp (deptno, dname, loc)
    VALUES(80, 'MOBILE', '');
SELECT * FROM dept_temp;

-- *) 실무에서는 ''보다 NULL을 입력해주는 방식을 선호!

-- 실습 10-7(p.271)
-- 테이블에 NULL 데이터 입력하기 : null 암시적 입력(2)
INSERT INTO dept_temp (deptno, loc)
    VALUES(90, 'INCHEON');
SELECT * FROM dept_temp;



-- 실습 10-8(p.272)
-- 테이블의 데이터를 제외한 테이블 구조만 복사하기
CREATE TABLE emp_temp
AS SELECT * FROM emp WHERE 1 <> 1;
-- -> 1 <> 1은 FALSE이기 때문에 각 행을 조건식에 대입한 결과 값은
-- 항상 FALSE가 되어 모든 데이터가 나오지 않는다.
-- 따라서, 테이블 구조만 복사하게 된다.
SELECT * FROM emp_temp;



-- 날짜 데이터 입력하기
-- 실습 10-9(p.273)
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    VALUES (9999, '홍길동', 'PRESIDENT', NULL, '2001/01/01', 5000, 1000, 10);

-- 실습 10-10(p.273)
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    VALUES (1111, '성춘향', 'MANAGER', 9999, '2001-01-05', 4000, NULL, 20);
SELECT * FROM emp_temp;

-- * 주의) 년/월/일 순서와 반대로 일/월/년 순서로 데이터를 입력하면 오류가 발생함

-- 실습 10-11(p.273)
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    VALUES (2111, '이순신', 'MANAGER', 9999, '07-01-2001', 4000, NULL, 20);
-- -> 날짜 형식의 지정에 불필요한 데이터가 포함되어 있다고 뜸

-- 실습 10-12(p.274)
-- TO_DATE 사용해서 입력하기
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    VALUES (2111, '이순신', 'MANAGER', 9999, TO_DATE('07-01-2001', 'DD/MM/YYYY'), 4000, NULL, 20);
SELECT * FROM emp_temp;

-- 실습 10-13(p.275)
-- 현재 날짜 입력하기 : SYSDATE
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    VALUES (3111, '심청이', 'MANAGER', 9999, SYSDATE, 4000, NULL, 30);
SELECT * FROM emp_temp;



-- 실습 10-14(p.275)
-- 서브쿼리를 사용하여 한 번에 여러 데이터 추가하기
INSERT INTO emp_temp (empno, ename, job, mgr, hiredate, sal, comm, deptno)
    SELECT E.empno, E.ename, E.job, E.mgr, E.hiredate, E.sal, E.comm, E.deptno
        FROM emp E
            INNER JOIN salgrade S ON E.sal BETWEEN S.losal AND S.hisal
            WHERE S.grade = 1;
SELECT * FROM emp_temp;



-- 데이터 준비하기 : CREATE TABLE dept_temp2 AS SELECT * FROM dept;
-- UPDATE : 테이블 데이터 수정하기
-- UPDATE 테이블이름 SET 열이름 = 내용작성 WHERE 열이름 = 조건값

-- 실습 10-16(p.278)
UPDATE dept_temp2 SET loc = 'SEOUL';
SELECT * FROM dept_temp2;

-- 실습 10-17(p.278) : 되돌리기
ROLLBACK;
SELECT * FROM dept_temp2;

-- 실습 10-18(p.279)
UPDATE dept_temp2
    SET dname = 'DATABASE',
    LOC = 'SEOUL'
WHERE deptno = 40;
SELECT * FROM dept_temp2;



-- 서브쿼리를 사용하여 데이터 수정하기
-- 실습 10-19(p.280)
UPDATE dept_temp2
    SET (dname, loc) = 
        (SELECT dname, loc FROM dept WHERE deptno = 40)
WHERE deptno = 40;
SELECT * FROM dept_temp2;

-- 실습 10-21(p.281)
UPDATE dept_temp2
    SET loc = 'SEOUL'
WHERE deptno = 
    (SELECT deptno FROM dept_temp2 WHERE dname = 'OPERATIONS');
SELECT * FROM dept_temp2;




-- CREATE TABLE emp_temp2 AS SELECT * FROM emp;
-- DELETE FROM 테이블 이름 : 테이블의 모든 행을 삭제
-- 실습 10-23(p.284)
DELETE FROM emp_temp2
    WHERE job = 'MANAGER';
SELECT * FROM emp_temp2 WHERE job = 'MANAGER';

-- 실습 10-24(p.285)
DELETE FROM emp_temp2
    WHERE empno IN
        (SELECT E.empno FROM emp_temp2 E
        INNER JOIN salgrade S ON E.sal BETWEEN S.losal AND S. hisal
            WHERE S.grade = 3 AND E.deptno = 30);
SELECT * FROM emp_temp2;



-- 연습 문제(p.287~p.289)
CREATE TABLE chap10hw_emp AS SELECT * FROM emp;
CREATE TABLE chap10hw_dept AS SELECT * FROM dept;
CREATE TABLE chap10hw_salgrade AS SELECT * FROM salgrade;

SELECT * FROM chap10hw_emp;
SELECT * FROM chap10hw_dept;
SELECT * FROM chap10hw_salgrade;

-- 1.
INSERT INTO chap10hw_dept
    VALUES (50, 'ORACLE', 'BUSAN');
INSERT INTO chap10hw_dept
    VALUES (60, 'SQL', 'ILSAN');
INSERT INTO chap10hw_dept
    VALUES (70, 'SELECT', 'INCHEON');
INSERT INTO chap10hw_dept
    VALUES (80, 'DML', 'BUNDANG');
SELECT * FROM chap10hw_dept;

-- 2.
SELECT * FROM chap10hw_emp;
INSERT INTO chap10hw_emp VALUES
    (7201, 'TEST_USER1', 'MANAGER', 7788, '2016-01-02', 4500, NULL, 50);
INSERT INTO chap10hw_emp VALUES
    (7202, 'TEST_USER2', 'CLERK', 7201, '2016-02-21', 1800, NULL, 50);
INSERT INTO chap10hw_emp VALUES
    (7203, 'TEST_USER3', 'ANALYST', 7201, '2016-04-11', 3400, NULL, 60);
INSERT INTO chap10hw_emp VALUES
    (7204, 'TEST_USER4', 'SALESMAN', 7201, '2016-05-31', 2700, 300, 60);
INSERT INTO chap10hw_emp VALUES
    (7205, 'TEST_USER5', 'CLERK', 7201, '2016-07-20', 2600, NULL, 70);
INSERT INTO chap10hw_emp VALUES
    (7206, 'TEST_USER6', 'CLERK', 7201, '2016-09-08', 2600, NULL, 70);
INSERT INTO chap10hw_emp VALUES
    (7207, 'TEST_USER7', 'LECTURER', 7201, '2016-10-28', 2300, NULL, 80);
INSERT INTO chap10hw_emp VALUES
    (7208, 'TEST_USER8', 'STUDENT', 7201, '2018-03-09', 1200, NULL, 80);
    
-- 3.
UPDATE chap10hw_emp
    SET deptno = 70
        WHERE sal >
            (SELECT AVG(sal) FROM chap10hw_emp
                WHERE deptno = 50);
SELECT * FROM chap10hw_emp;

-- 4.
UPDATE chap10hw_emp
    SET deptno = 80, sal = sal*1.1
        WHERE hiredate >
            (SELECT MIN(hiredate) FROM chap10hw_emp
                WHERE deptno = 60);
SELECT * FROM chap10hw_emp;

-- 5.
DELETE FROM chap10hw_emp
    WHERE empno IN (SELECT E.empno FROM chap10hw_emp E
        INNER JOIN salgrade S ON E.sal BETWEEN S.losal AND S. hisal
            WHERE s.grade = 5);
SELECT * FROM chap10hw_emp;